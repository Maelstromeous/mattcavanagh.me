name: Build & Deploy Staging
on:
  push:
    branches: [ staging ]
jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build base image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          path: provisioning/base
          repository: maelstromeous/applications
          tags: mattcavanagh-base

      - name: Build staging image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: maelstromeous/applications
          dockerfile: provisioning/staging/Dockerfile
          always_pull: true
          tags: mattcavanagh-staging-${{ github.sha }}

  deploy-to-k8s:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # This is what changes the docker container version. This updates it locally (to the action's workspace) and updates the template key {{ version }} based off the git SHA, as you've used in the build tag.
      - name: Update the K8s deployment file
        run: sed -i 's|{{ version }}|${{ github.sha }}|' provisioning/staging/k8s/resources.yml

      # Apply the deployment, telling k8s to change the container version to the new one.
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f provisioning/staging/k8s/resources.yml

      # Outputs the rollout status and returns a 0 signal (thus completing the workflow) once it's rolled out.
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout status deployment/mattcavanagh-staging -n mattcavanagh
